Дан массив объектов Person. Класс Person характеризуется полями age (возраст, целое число 0-100), sex (пол – объект класса Sex со строковыми константами внутри MAN, WOMAN), name (имя - строка). Создать два класса, методы которых будут реализовывать сортировку объектов. Предусмотреть единый интерфейс для классов сортировки. Реализовать два различных метода сортировки этого массива по правилам:
первые идут мужчины
выше в списке тот, кто более старший
имена сортируются по алфавиту
Программа должна вывести на экран отсортированный список и время работы каждого алгоритма сортировки.
Предусмотреть генерацию исходного массива (10000 элементов и более).
Если имена людей и возраст совпадают, выбрасывать в программе пользовательское исключение.
Общие критерии оценки:
Программа компилируется.
В ходе работы программе не возникает ошибок в процессе выполнения, за исключением, где это необходимо.
Программа в результате своей работы возвращает корректный результат, т.е. тот который требуется по условиям задания.
Выполнены все архитектурные принципы построения программы, правильно применены принципы ООП.
Присутствует документация (JavaDoc).
Код соответствует принципам Java Code Convention.
Работа с ресурсами (файлы, потоки и т.д.) осуществляется корректно.
В программе предусмотрено возникновение исключительных ситуаций.
Код программы, без лишних локальных файлов, должен быть загружен в открытый репозиторий (github, bitbucket, gitlab).
Решение задачи оформляется в пакете с номером задания, например part1.lesson01.task01. В системе Moodle размещается ссылка на пакет с решением в репозитории.  Рекомендуется придерживаться версионности, каждая новая ветка – является решением отдельного задания.
